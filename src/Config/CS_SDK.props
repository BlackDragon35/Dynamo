<Project>
  <PropertyGroup>
    <Platforms>NET48_ANYCPU;NET50_ANYCPU</Platforms>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">NET48_ANYCPU</Platform>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">16.0</VisualStudioVersion>
    <FileAlignment>512</FileAlignment>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath> 
    <OutputPath Condition=" '$(OutputPath)' == '' ">$(SolutionDir)..\bin\$(Platform)\$(Configuration)</OutputPath>
    <NunitPath Condition=" '$(NunitPath)' == '' ">$(SolutionDir)..\extern\NUnit</NunitPath>
    <SharpDXDirectXVersion>DirectX11</SharpDXDirectXVersion>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <UICulture>en-US</UICulture>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
    <TestProjectDefaults Condition="$(MSBuildProjectDirectory.Contains('test'))">true</TestProjectDefaults>
    <TestProjectDefaults Condition=" '$(TestProjectDefaults)' == '' ">false</TestProjectDefaults>
    <NoWarn>MSB3539</NoWarn><!--The value of the property "BaseIntermediateOutputPath" was modified after it was used by MSBuild-->
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
    <DebugSymbols>true</DebugSymbols>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <UseAppHost>false</UseAppHost>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="$(Platform.Contains('NET48'))">
    <TargetFramework>net48</TargetFramework>
    <TargetFrameworkId>net48</TargetFrameworkId>
  </PropertyGroup>
    <PropertyGroup Condition="$(Platform.Contains('NET60'))" >
    <TargetFramework>net60</TargetFramework>
  </PropertyGroup>
  <PropertyGroup Condition="$(Platform.Contains('NET50'))" >
    <TargetFramework>net50</TargetFramework>
    <TargetFrameworkId>net50orAbove</TargetFrameworkId>
  </PropertyGroup>
  <PropertyGroup Condition="'$(UILib)' == 'true' AND $(Platform.Contains('NET50'))">
    <TargetFramework>net50-windows</TargetFramework>
    <UseWPF>true</UseWPF>
    <UseWindowsForms>true</UseWindowsForms>
  </PropertyGroup>
  <PropertyGroup>
    <BaseIntermediateOutputPath>int\$(TargetFramework)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath>obj\$(TargetFramework)\</IntermediateOutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFrameworkId)' == 'net50orAbove'">
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>
  <ItemGroup>
    <Compile Remove="obj\**" />
    <EmbeddedResource Remove="obj\**" />
    <None Remove="obj\**" />
    <None Remove="*.resources" />
    <Compile Remove="int\**" />
    <EmbeddedResource Remove="int\**" />
    <None Remove="int\**" />
  </ItemGroup>
  <ItemGroup>
    <Compile Condition="'$(ProjectName)'!='AssemblyInfoGenerator'" Include="$(SolutionDir)AssemblySharedInfoGenerator\AssemblySharedInfo.cs">
      <Link>Properties\AssemblySharedInfo.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemDefinitionGroup>
    <ProjectReference>
      <Private>false</Private>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition=" '$(TestProjectDefaults)' == 'true' ">
    <ProjectReference>
      <PrivateAssets>all</PrivateAssets>
      <ExcludeAssets>runtime</ExcludeAssets>
    </ProjectReference>
    <PackageReference>
      <PrivateAssets>all</PrivateAssets>
      <ExcludeAssets>runtime</ExcludeAssets>
    </PackageReference>
  </ItemDefinitionGroup>
  <Target Name="CleanIntermediaryFolder" Condition="Exists('$(ProjectDir)$(BaseIntermediateOutputPath)')" BeforeTargets="Clean" >
     <RemoveDir ContinueOnError="WarnAndContinue" Directories="$(ProjectDir)$(BaseIntermediateOutputPath)" /> <!-- int -->
  </Target>
  <Target Name="CopyPackageData" AfterTargets="Build" Outputs="%(PackageReference.Identity)" >
    <PropertyGroup>
      <Local_CopyMetaData>%(PackageReference.CopyMetaData)</Local_CopyMetaData>
      <Local_CopyXML>%(PackageReference.CopyXML)</Local_CopyXML>
      <Local_CopyPDB>%(PackageReference.CopyPDB)</Local_CopyPDB>
      <Local_NuGetPackageId>%(PackageReference.Identity)</Local_NuGetPackageId>
      <Local_CopyToSubdirectory>%(PackageReference.CopyDllToSubdirectory)</Local_CopyToSubdirectory>
      <PackagesOutputSubdirectory>%(ReferenceCopyLocalPaths.DestinationSubDirectory)</PackagesOutputSubdirectory>
    </PropertyGroup>
    <ItemGroup Condition="$(Local_CopyXML) == 'true' or $(Local_CopyMetaData) == 'true'">
      <MyReferences Include="@(ReferencePath->WithMetadataValue( 'NuGetPackageId', $(Local_NuGetPackageId) ))" />
      <XMLContent Include="%(MyReferences.RelativeDir)%(MyReferences.FileName).xml" Condition="$([System.String]::Copy('%(MyReferences.FullPath)').ToLower().Contains('$(Local_NuGetPackageId.ToLower())'))" />
    </ItemGroup>
    <ItemGroup Condition="$(Local_CopyPDB) == 'true' or $(Local_CopyMetaData) == 'true'">
      <MyReferences Include="@(ReferencePath->WithMetadataValue( 'NuGetPackageId', $(Local_NuGetPackageId) ))" />
      <PDBContent Include="%(MyReferences.RelativeDir)%(MyReferences.FileName).pdb" Condition="$([System.String]::Copy('%(MyReferences.FullPath)').ToLower().Contains('$(Local_NuGetPackageId.ToLower())'))" />
    </ItemGroup>
    <ItemGroup Condition="$(Local_CopyToSubdirectory) != ''">
      <MyReferences Include="@(ReferencePath->WithMetadataValue( 'NuGetPackageId', $(Local_NuGetPackageId) ))" />
      <DLLContent Include="%(MyReferences.FullPath)" Condition="$([System.String]::Copy('%(MyReferences.FullPath)').ToLower().Contains('$(Local_NuGetPackageId.ToLower())'))" />
    </ItemGroup>
    <Copy SourceFiles="@(XMLContent)" DestinationFolder="$(OutDir)$(PackagesOutputSubdirectory)" Condition="Exists('%(FullPath)')" />
    <Copy SourceFiles="@(PDBContent)" DestinationFolder="$(OutDir)$(PackagesOutputSubdirectory)" Condition="Exists('%(FullPath)')" />
    <Copy SourceFiles="@(DLLContent)" DestinationFolder="$(OutDir)$(PackagesOutputSubdirectory)$(Local_CopyToSubdirectory)" Condition="Exists('%(FullPath)')" />
  </Target>
  <Target Name="ResolveSateliteResDeps" AfterTargets="Build" Condition=" '$(OS)' != 'Unix' ">
    <!-- Get System.Drawing.dll -->
    <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' ">
      <ResourceGeneration_FrameworkVersion >v4.8</ResourceGeneration_FrameworkVersion>
    </PropertyGroup>
    <GetReferenceAssemblyPaths Condition=" '$(TargetFramework)' == 'net48' " TargetFrameworkMoniker=".NETFramework, Version=$(ResourceGeneration_FrameworkVersion)">
      <Output TaskParameter="FullFrameworkReferenceAssemblyPaths" PropertyName="FrameworkAssembliesPath" />
    </GetReferenceAssemblyPaths>
    <PropertyGroup>
      <SystemDrawingDllPath Condition=" '$(TargetFramework)' == 'net48' ">$(FrameworkAssembliesPath)System.Drawing.dll</SystemDrawingDllPath>
      <SystemDrawingDllPath Condition=" '$(TargetFramework)' == 'net50' ">$(PkgSystem_Drawing_Common)\lib\netcoreapp3.1\System.Drawing.Common.dll</SystemDrawingDllPath>
    </PropertyGroup>
  </Target>
</Project>
